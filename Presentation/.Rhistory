"Trial",
ifelse(STORE_NBR == control_store,
"Control", "Other stores"))
][, nCustomers := mean(nCustomers), by = c("YEARMONTH",
"Store_type")
][, TransactionMonth := as.Date(paste(YEARMONTH %/% 100, YEARMONTH %% 100, 1, sep = "-"))
][YEARMONTH < 201903 , ]
ggplot(pastCustomers, aes(TransactionMonth, nCustomers, color = Store_type)) +
geom_line() +
labs(x = "Month of operation", y = "Total sales", title = "Total sales by month")
scalingFactorForControlSales <- preTrialMeasures[STORE_NBR == trial_store &
YEARMONTH < 201902, sum(totSales)]/preTrialMeasures[STORE_NBR == control_store &
YEARMONTH < 201902, sum(totSales)]
scaledControlSales <- measureOverTimeSales[STORE_NBR == control_store, ][ ,
controlSales := totSales * scalingFactorForControlSales]
percentageDiff <- merge(scaledControlSales,pastSales[Store_type == "Trial"], by = "YEARMONTH")[,percentageDiff := abs(controlSales - totSales.y)/controlSales ]
stdDev <- sd(percentageDiff[YEARMONTH < 201902 , percentageDiff])
degreesOfFreedom <- 7
percentageDiff[, tValue := abs(totSales.x - mean(totSales.y))/stdDev
][, TransactionMonth := TransactionMonth.x
]
pastSales <- pastSales[Store_type %in% c("Trial", "Control"), ]
pastSales_Controls95 <- pastSales[Store_type == "Control",
][, totSales := totSales * (1 + stdDev * 2)
][, Store_type := "Control 95th % confidence
interval"]
#### Control store 5th percentile
pastSales_Controls5 <- pastSales[Store_type == "Control",
][, totSales := totSales * (1 - stdDev * 2)
][, Store_type := "Control 5th % confidence
interval"]
trialAssessment <- rbind(pastSales, pastSales_Controls95, pastSales_Controls5)
#### Plotting these in one nice graph
ggplot(trialAssessment, aes(TransactionMonth, totSales, color = Store_type)) +
geom_rect(data = trialAssessment[ YEARMONTH < 201905 & YEARMONTH > 201901 ,],
aes(xmin = min(TransactionMonth), xmax = max(TransactionMonth), ymin = 0 , ymax =
Inf, color = NULL), show.legend = FALSE) +
geom_line() +
labs(x = "Month of operation", y = "Total sales", title = "Total sales by month")
scalingFactorForControlCust <- preTrialMeasures[STORE_NBR == trial_store & YEARMONTH < 201902, sum(nCustomers)]/preTrialMeasures[STORE_NBR == control_store & YEARMONTH < 201902, sum(nCustomers)]
measureOverTimeCusts <- measureOverTimeSales
scaledControlCustomers <- measureOverTimeCusts[STORE_NBR == control_store, ][ , controlCustomer := nCustomers * scalingFactorForControlCust]
percentageDiff <- merge(scaledControlCustomers,pastCustomers[Store_type == "Trial"],
by = "YEARMONTH")[,percentageDiff := abs(controlCustomer - nCustomers.y)/controlCustomer ]
stdDev <- sd(percentageDiff[YEARMONTH < 201902 , percentageDiff]
)
degreesOfFreedom <- 7
#### Trial and control store number of customers
pastCustomers <- measureOverTimeCusts[, nCusts := mean(nCustomers), by =
c("YEARMONTH", "Store_type")
][Store_type %in% c("Trial", "Control"), ]
pastCustomers_Controls95 <- pastCustomers[Store_type == "Control",
][, nCusts := nCusts * (1 + stdDev * 2)
][, Store_type := "Control 95th % confidence"]
#### Control store 5th percentile
pastCustomers_Controls5 <- pastCustomers[Store_type == "Control",
][, nCusts := nCusts * (1 - stdDev * 2)
][, Store_type := "Control 5th % confidence
interval"]
trialAssessment <- rbind(pastCustomers, pastCustomers_Controls95,
pastCustomers_Controls5)
ggplot(trialAssessment, aes(TransactionMonth, nCusts, color = Store_type)) +
geom_rect(data = trialAssessment[ YEARMONTH < 201905 & YEARMONTH > 201901 ,],
aes(xmin = min(TransactionMonth), xmax = max(TransactionMonth), ymin = 0 , ymax =
Inf, color = NULL), show.legend = FALSE) +
geom_line() +
labs(x = "Month of operation", y = "NUmber of Customers", title = "NUmber of Customers by month")
trialAssessment <- rbind(pastSales, pastSales_Controls95, pastSales_Controls5)
trial_store <- 77
corr_nSales <- calculateCorrelation(preTrialMeasures, quote(totSales),
trial_store)
corr_nCustomers <- calculateCorrelation(preTrialMeasures, quote(nCustomers),trial_store )
magnitude_nSales <- calculateMagnitudeDistance(preTrialMeasures, quote(totSales),
trial_store)
magnitude_nCustomers <- calculateMagnitudeDistance(preTrialMeasures,
quote(nCustomers), trial_store)
corr_weight <- 0.5
score_nSales <- merge(corr_nSales, magnitude_nSales, by = intersect(names(corr_nSales),names(magnitude_nSales)))[, scoreNSales := corr_weight*corr_nSales$corr_measure + (1-corr_weight)* magnitude_nSales$mag_measure]
score_nCustomers <- merge(corr_nCustomers, magnitude_nCustomers, by = intersect(names(corr_nCustomers),names(magnitude_nCustomers)))[, scoreNCust := corr_weight*corr_measure + (1-corr_weight)*mag_measure]
score_Control <- merge(score_nSales,score_nCustomers , by = c("Store1", "Store2"))
score_Control[, finalControlScore := scoreNSales * 0.5 + scoreNCust * 0.5]
score_Control = score_Control[order(-finalControlScore)]
control_store = score_Control[2,]$Store2
measureOverTimeSales = measure_over_time
measureOverTimeSales$YEARMONTH = as.numeric(measureOverTimeSales$YEARMONTH)
pastSales <- measureOverTimeSales[, Store_type := ifelse(STORE_NBR == trial_store,
"Trial",
ifelse(STORE_NBR == control_store,
"Control", "Other stores"))
][, totSales := mean(totSales), by = c("YEARMONTH",
"Store_type")
][, TransactionMonth := as.Date(paste(YEARMONTH %/% 100, YEARMONTH %% 100, 1, sep = "-"))
][YEARMONTH < 201903 , ]
ggplot(pastSales, aes(TransactionMonth, totSales, color = Store_type)) +
geom_line() +
labs(x = "Month of operation", y = "Total sales", title = "Total sales by month")
pastCustomers <- measureOverTimeSales[, Store_type := ifelse(STORE_NBR == trial_store,
"Trial",
ifelse(STORE_NBR == control_store,
"Control", "Other stores"))
][, nCustomers := mean(nCustomers), by = c("YEARMONTH",
"Store_type")
][, TransactionMonth := as.Date(paste(YEARMONTH %/% 100, YEARMONTH %% 100, 1, sep = "-"))
][YEARMONTH < 201903 , ]
ggplot(pastCustomers, aes(TransactionMonth, nCustomers, color = Store_type)) +
geom_line() +
labs(x = "Month of operation", y = "Total sales", title = "Total sales by month")
scalingFactorForControlSales <- preTrialMeasures[STORE_NBR == trial_store &
YEARMONTH < 201902, sum(totSales)]/preTrialMeasures[STORE_NBR == control_store &
YEARMONTH < 201902, sum(totSales)]
scaledControlSales <- measureOverTimeSales[STORE_NBR == control_store, ][ ,
controlSales := totSales * scalingFactorForControlSales]
percentageDiff <- merge(scaledControlSales,pastSales[Store_type == "Trial"], by = "YEARMONTH")[,percentageDiff := abs(controlSales - totSales.y)/controlSales ]
stdDev <- sd(percentageDiff[YEARMONTH < 201902 , percentageDiff])
degreesOfFreedom <- 7
percentageDiff[, tValue := abs(totSales.x - mean(totSales.y))/stdDev
][, TransactionMonth := TransactionMonth.x
]
pastSales <- pastSales[Store_type %in% c("Trial", "Control"), ]
pastSales_Controls95 <- pastSales[Store_type == "Control",
][, totSales := totSales * (1 + stdDev * 2)
][, Store_type := "Control 95th % confidence
interval"]
#### Control store 5th percentile
pastSales_Controls5 <- pastSales[Store_type == "Control",
][, totSales := totSales * (1 - stdDev * 2)
][, Store_type := "Control 5th % confidence
interval"]
trialAssessment <- rbind(pastSales, pastSales_Controls95, pastSales_Controls5)
#### Plotting these in one nice graph
ggplot(trialAssessment, aes(TransactionMonth, totSales, color = Store_type)) +
geom_rect(data = trialAssessment[ YEARMONTH < 201905 & YEARMONTH > 201901 ,],
aes(xmin = min(TransactionMonth), xmax = max(TransactionMonth), ymin = 0 , ymax =
Inf, color = NULL), show.legend = FALSE) +
geom_line() +
labs(x = "Month of operation", y = "NUmber of Customers", title = "NUmber of Customers by month")
scalingFactorForControlCust <- preTrialMeasures[STORE_NBR == trial_store & YEARMONTH < 201902, sum(nCustomers)]/preTrialMeasures[STORE_NBR == control_store & YEARMONTH < 201902, sum(nCustomers)]
measureOverTimeCusts <- measureOverTimeSales
scaledControlCustomers <- measureOverTimeCusts[STORE_NBR == control_store, ][ , controlCustomer := nCustomers * scalingFactorForControlCust]
percentageDiff <- merge(scaledControlCustomers,pastCustomers[Store_type == "Trial"],
by = "YEARMONTH")[,percentageDiff := abs(controlCustomer - nCustomers.y)/controlCustomer ]
stdDev <- sd(percentageDiff[YEARMONTH < 201902 , percentageDiff]
)
degreesOfFreedom <- 7
#### Trial and control store number of customers
pastCustomers <- measureOverTimeCusts[, nCusts := mean(nCustomers), by =
c("YEARMONTH", "Store_type")
][Store_type %in% c("Trial", "Control"), ]
pastCustomers_Controls95 <- pastCustomers[Store_type == "Control",
][, nCusts := nCusts * (1 + stdDev * 2)
][, Store_type := "Control 95th % confidence"]
#### Control store 5th percentile
pastCustomers_Controls5 <- pastCustomers[Store_type == "Control",
][, nCusts := nCusts * (1 - stdDev * 2)
][, Store_type := "Control 5th % confidence
interval"]
trialAssessment <- rbind(pastCustomers, pastCustomers_Controls95,
pastCustomers_Controls5)
ggplot(trialAssessment, aes(TransactionMonth, nCusts, color = Store_type)) +
geom_rect(data = trialAssessment[ YEARMONTH < 201905 & YEARMONTH > 201901 ,],
aes(xmin = min(TransactionMonth), xmax = max(TransactionMonth), ymin = 0 , ymax =
Inf, color = NULL), show.legend = FALSE) +
geom_line() +
labs(x = "Month of operation", y = "NUmber of Customers", title = "NUmber of Customers by month")
library(data.table)
library(ggplot2)
library(tidyr)
library(dplyr)
trial_store <- 77
corr_nSales <- calculateCorrelation(preTrialMeasures, quote(totSales),
trial_store)
corr_nCustomers <- calculateCorrelation(preTrialMeasures, quote(nCustomers),trial_store )
magnitude_nSales <- calculateMagnitudeDistance(preTrialMeasures, quote(totSales),
trial_store)
magnitude_nCustomers <- calculateMagnitudeDistance(preTrialMeasures,
quote(nCustomers), trial_store)
corr_weight <- 0.5
score_nSales <- merge(corr_nSales, magnitude_nSales, by = intersect(names(corr_nSales),names(magnitude_nSales)))[, scoreNSales := corr_weight*corr_nSales$corr_measure + (1-corr_weight)* magnitude_nSales$mag_measure]
score_nCustomers <- merge(corr_nCustomers, magnitude_nCustomers, by = intersect(names(corr_nCustomers),names(magnitude_nCustomers)))[, scoreNCust := corr_weight*corr_measure + (1-corr_weight)*mag_measure]
score_Control <- merge(score_nSales,score_nCustomers , by = c("Store1", "Store2"))
score_Control[, finalControlScore := scoreNSales * 0.5 + scoreNCust * 0.5]
score_Control = score_Control[order(-finalControlScore)]
control_store = score_Control[2,]$Store2
measureOverTimeSales = measure_over_time
measureOverTimeSales$YEARMONTH = as.numeric(measureOverTimeSales$YEARMONTH)
pastSales <- measureOverTimeSales[, Store_type := ifelse(STORE_NBR == trial_store,
"Trial",
ifelse(STORE_NBR == control_store,
"Control", "Other stores"))
][, totSales := mean(totSales), by = c("YEARMONTH",
"Store_type")
][, TransactionMonth := as.Date(paste(YEARMONTH %/% 100, YEARMONTH %% 100, 1, sep = "-"))
][YEARMONTH < 201903 , ]
ggplot(pastSales, aes(TransactionMonth, totSales, color = Store_type)) +
geom_line() +
labs(x = "Month of operation", y = "Total sales", title = "Total sales by month")
pastCustomers <- measureOverTimeSales[, Store_type := ifelse(STORE_NBR == trial_store,
"Trial",
ifelse(STORE_NBR == control_store,
"Control", "Other stores"))
][, nCustomers := mean(nCustomers), by = c("YEARMONTH",
"Store_type")
][, TransactionMonth := as.Date(paste(YEARMONTH %/% 100, YEARMONTH %% 100, 1, sep = "-"))
][YEARMONTH < 201903 , ]
ggplot(pastCustomers, aes(TransactionMonth, nCustomers, color = Store_type)) +
geom_line() +
labs(x = "Month of operation", y = "Total sales", title = "Total sales by month")
scalingFactorForControlSales <- preTrialMeasures[STORE_NBR == trial_store &
YEARMONTH < 201902, sum(totSales)]/preTrialMeasures[STORE_NBR == control_store &
YEARMONTH < 201902, sum(totSales)]
scaledControlSales <- measureOverTimeSales[STORE_NBR == control_store, ][ ,
controlSales := totSales * scalingFactorForControlSales]
percentageDiff <- merge(scaledControlSales,pastSales[Store_type == "Trial"], by = "YEARMONTH")[,percentageDiff := abs(controlSales - totSales.y)/controlSales ]
stdDev <- sd(percentageDiff[YEARMONTH < 201902 , percentageDiff])
degreesOfFreedom <- 7
percentageDiff[, tValue := abs(totSales.x - mean(totSales.y))/stdDev
][, TransactionMonth := TransactionMonth.x
]
pastSales <- pastSales[Store_type %in% c("Trial", "Control"), ]
pastSales_Controls95 <- pastSales[Store_type == "Control",
][, totSales := totSales * (1 + stdDev * 2)
][, Store_type := "Control 95th % confidence
interval"]
#### Control store 5th percentile
pastSales_Controls5 <- pastSales[Store_type == "Control",
][, totSales := totSales * (1 - stdDev * 2)
][, Store_type := "Control 5th % confidence
interval"]
trialAssessment <- rbind(pastSales, pastSales_Controls95, pastSales_Controls5)
#### Plotting these in one nice graph
ggplot(trialAssessment, aes(TransactionMonth, totSales, color = Store_type)) +
geom_rect(data = trialAssessment[ YEARMONTH < 201905 & YEARMONTH > 201901 ,],
aes(xmin = min(TransactionMonth), xmax = max(TransactionMonth), ymin = 0 , ymax =
Inf, color = NULL), show.legend = FALSE) +
geom_line() +
labs(x = "Month of operation", y = "NUmber of Customers", title = "NUmber of Customers by month")
scalingFactorForControlCust <- preTrialMeasures[STORE_NBR == trial_store & YEARMONTH < 201902, sum(nCustomers)]/preTrialMeasures[STORE_NBR == control_store & YEARMONTH < 201902, sum(nCustomers)]
measureOverTimeCusts <- measureOverTimeSales
scaledControlCustomers <- measureOverTimeCusts[STORE_NBR == control_store, ][ , controlCustomer := nCustomers * scalingFactorForControlCust]
percentageDiff <- merge(scaledControlCustomers,pastCustomers[Store_type == "Trial"],
by = "YEARMONTH")[,percentageDiff := abs(controlCustomer - nCustomers.y)/controlCustomer ]
stdDev <- sd(percentageDiff[YEARMONTH < 201902 , percentageDiff]
)
degreesOfFreedom <- 7
#### Trial and control store number of customers
pastCustomers <- measureOverTimeCusts[, nCusts := mean(nCustomers), by =
c("YEARMONTH", "Store_type")
][Store_type %in% c("Trial", "Control"), ]
pastCustomers_Controls95 <- pastCustomers[Store_type == "Control",
][, nCusts := nCusts * (1 + stdDev * 2)
][, Store_type := "Control 95th % confidence"]
#### Control store 5th percentile
pastCustomers_Controls5 <- pastCustomers[Store_type == "Control",
][, nCusts := nCusts * (1 - stdDev * 2)
][, Store_type := "Control 5th % confidence
interval"]
trialAssessment <- rbind(pastCustomers, pastCustomers_Controls95,
pastCustomers_Controls5)
ggplot(trialAssessment, aes(TransactionMonth, nCusts, color = Store_type)) +
geom_rect(data = trialAssessment[ YEARMONTH < 201905 & YEARMONTH > 201901 ,],
aes(xmin = min(TransactionMonth), xmax = max(TransactionMonth), ymin = 0 , ymax =
Inf, color = NULL), show.legend = FALSE) +
geom_line() +
labs(x = "Month of operation", y = "NUmber of Customers", title = "NUmber of Customers by month")
ggplot(trialAssessment, aes(TransactionMonth, totSales, color = Store_type)) +
geom_rect(data = trialAssessment[ YEARMONTH < 201905 & YEARMONTH > 201901 ,],
aes(xmin = min(TransactionMonth), xmax = max(TransactionMonth), ymin = 0 ,
ymax = Inf, color = NULL), show.legend = FALSE) +
geom_line(aes(linetype = Store_type)) +
labs(x = "Month of operation", y = "Total sales", title = "Total sales by
month")
ggplot(trialAssessment, aes(TransactionMonth, totSales, color = Store_type)) +
geom_rect(data = trialAssessment[ YEARMONTH < 201905 & YEARMONTH > 201901 ,],
aes(xmin = min(TransactionMonth), xmax = max(TransactionMonth), ymin = 0 ,
ymax = Inf, color = NULL), show.legend = FALSE) +
↪
↪
geom_line(aes(linetype = Store_type)) +
labs(x = "Month of operation", y = "Total sales", title = "Total sales by
↪ month")
ggplot(trialAssessment, aes(TransactionMonth, totSales, color = Store_type)) +
geom_rect(data = trialAssessment[ YEARMONTH < 201905 & YEARMONTH > 201901 ,],
aes(xmin = min(TransactionMonth), xmax = max(TransactionMonth), ymin = 0 ,
ymax = Inf, color = NULL), show.legend = FALSE) +
geom_line(aes(linetype = Store_type)) +
labs(x = "Month of operation", y = "Total sales", title = "Total sales by
month")
trialAssessment <- rbind(pastSales, pastSales_Controls95, pastSales_Controls5)
ggplot(trialAssessment, aes(TransactionMonth, totSales, color = Store_type)) +
geom_rect(data = trialAssessment[ YEARMONTH < 201905 & YEARMONTH > 201901 ,],
aes(xmin = min(TransactionMonth), xmax = max(TransactionMonth), ymin = 0 ,
ymax = Inf, color = NULL), show.legend = FALSE) +
geom_line(aes(linetype = Store_type)) +
labs(x = "Month of operation", y = "Total sales", title = "Total sales by
month")
View(corr_nSales)
View(corr_nCustomers)
View(magnitude_nCustomers)
View(magnitude_nSales)
View(score_Control)
View(scaledControlSales)
View(scaledControlCustomers)
View(score_nCustomers)
View(score_nSales)
View(score_Control)
write.csv(score_Control, file = "new")
View(score_nCustomers)
View(score_nSales)
View(score_nCustomers)
View(scaledControlSales)
View(scaledControlSales)
View(score_Control)
View(score_Control)
View(score_nSales)
View(score_nSales)
View(score_Control)
trial_store <- 88
corr_nSales <- calculateCorrelation(preTrialMeasures, quote(totSales),
trial_store)
corr_nCustomers <- calculateCorrelation(preTrialMeasures, quote(nCustomers),trial_store )
magnitude_nSales <- calculateMagnitudeDistance(preTrialMeasures, quote(totSales),
trial_store)
magnitude_nCustomers <- calculateMagnitudeDistance(preTrialMeasures,
quote(nCustomers), trial_store)
corr_weight <- 0.5
score_nSales <- merge(corr_nSales, magnitude_nSales, by = intersect(names(corr_nSales),names(magnitude_nSales)))[, scoreNSales := corr_weight*corr_nSales$corr_measure + (1-corr_weight)* magnitude_nSales$mag_measure]
score_nCustomers <- merge(corr_nCustomers, magnitude_nCustomers, by = intersect(names(corr_nCustomers),names(magnitude_nCustomers)))[, scoreNCust := corr_weight*corr_measure + (1-corr_weight)*mag_measure]
score_Control <- merge(score_nSales,score_nCustomers , by = c("Store1", "Store2"))
score_Control[, finalControlScore := scoreNSales * 0.5 + scoreNCust * 0.5]
score_Control = score_Control[order(-finalControlScore)]
control_store = score_Control[2,]$Store2
measureOverTimeSales = measure_over_time
measureOverTimeSales$YEARMONTH = as.numeric(measureOverTimeSales$YEARMONTH)
pastSales <- measureOverTimeSales[, Store_type := ifelse(STORE_NBR == trial_store,
"Trial",
ifelse(STORE_NBR == control_store,
"Control", "Other stores"))
][, totSales := mean(totSales), by = c("YEARMONTH",
"Store_type")
][, TransactionMonth := as.Date(paste(YEARMONTH %/% 100, YEARMONTH %% 100, 1, sep = "-"))
][YEARMONTH < 201903 , ]
ggplot(pastSales, aes(TransactionMonth, totSales, color = Store_type)) +
geom_line() +
labs(x = "Month of operation", y = "Total sales", title = "Total sales by month")
pastCustomers <- measureOverTimeSales[, Store_type := ifelse(STORE_NBR == trial_store,
"Trial",
ifelse(STORE_NBR == control_store,
"Control", "Other stores"))
][, nCustomers := mean(nCustomers), by = c("YEARMONTH",
"Store_type")
][, TransactionMonth := as.Date(paste(YEARMONTH %/% 100, YEARMONTH %% 100, 1, sep = "-"))
][YEARMONTH < 201903 , ]
ggplot(pastCustomers, aes(TransactionMonth, nCustomers, color = Store_type)) +
geom_line() +
labs(x = "Month of operation", y = "Total sales", title = "Total sales by month")
scalingFactorForControlSales <- preTrialMeasures[STORE_NBR == trial_store &
YEARMONTH < 201902, sum(totSales)]/preTrialMeasures[STORE_NBR == control_store &
YEARMONTH < 201902, sum(totSales)]
scaledControlSales <- measureOverTimeSales[STORE_NBR == control_store, ][ ,
controlSales := totSales * scalingFactorForControlSales]
percentageDiff <- merge(scaledControlSales,pastSales[Store_type == "Trial"], by = "YEARMONTH")[,percentageDiff := abs(controlSales - totSales.y)/controlSales ]
stdDev <- sd(percentageDiff[YEARMONTH < 201902 , percentageDiff])
degreesOfFreedom <- 7
percentageDiff[, tValue := abs(totSales.x - mean(totSales.y))/stdDev
][, TransactionMonth := TransactionMonth.x
]
pastSales <- pastSales[Store_type %in% c("Trial", "Control"), ]
pastSales_Controls95 <- pastSales[Store_type == "Control",
][, totSales := totSales * (1 + stdDev * 2)
][, Store_type := "Control 95th % confidence
interval"]
#### Control store 5th percentile
pastSales_Controls5 <- pastSales[Store_type == "Control",
][, totSales := totSales * (1 - stdDev * 2)
][, Store_type := "Control 5th % confidence
interval"]
trialAssessment <- rbind(pastSales, pastSales_Controls95, pastSales_Controls5)
#### Plotting these in one nice graph
ggplot(trialAssessment, aes(TransactionMonth, totSales, color = Store_type)) +
geom_rect(data = trialAssessment[ YEARMONTH < 201905 & YEARMONTH > 201901 ,],
aes(xmin = min(TransactionMonth), xmax = max(TransactionMonth), ymin = 0 , ymax =
Inf, color = NULL), show.legend = FALSE) +
geom_line() +
labs(x = "Month of operation", y = "Total sales", title = "Total sales by month")
scalingFactorForControlCust <- preTrialMeasures[STORE_NBR == trial_store & YEARMONTH < 201902, sum(nCustomers)]/preTrialMeasures[STORE_NBR == control_store & YEARMONTH < 201902, sum(nCustomers)]
measureOverTimeCusts <- measureOverTimeSales
scaledControlCustomers <- measureOverTimeCusts[STORE_NBR == control_store, ][ , controlCustomer := nCustomers * scalingFactorForControlCust]
percentageDiff <- merge(scaledControlCustomers,pastCustomers[Store_type == "Trial"],
by = "YEARMONTH")[,percentageDiff := abs(controlCustomer - nCustomers.y)/controlCustomer ]
stdDev <- sd(percentageDiff[YEARMONTH < 201902 , percentageDiff]
)
degreesOfFreedom <- 7
#### Trial and control store number of customers
pastCustomers <- measureOverTimeCusts[, nCusts := mean(nCustomers), by =
c("YEARMONTH", "Store_type")
][Store_type %in% c("Trial", "Control"), ]
pastCustomers_Controls95 <- pastCustomers[Store_type == "Control",
][, nCusts := nCusts * (1 + stdDev * 2)
][, Store_type := "Control 95th % confidence"]
#### Control store 5th percentile
pastCustomers_Controls5 <- pastCustomers[Store_type == "Control",
][, nCusts := nCusts * (1 - stdDev * 2)
][, Store_type := "Control 5th % confidence
interval"]
trialAssessment <- rbind(pastCustomers, pastCustomers_Controls95,
pastCustomers_Controls5)
ggplot(trialAssessment, aes(TransactionMonth, nCusts, color = Store_type)) +
geom_rect(data = trialAssessment[ YEARMONTH < 201905 & YEARMONTH > 201901 ,],
aes(xmin = min(TransactionMonth), xmax = max(TransactionMonth), ymin = 0 , ymax =
Inf, color = NULL), show.legend = FALSE) +
geom_line() +
labs(x = "Month of operation", y = "NUmber of Customers", title = "NUmber of Customers by month")
library(data.table)
library(ggplot2)
library(tidyr)
library(dplyr)
trial_store <- 88
corr_nSales <- calculateCorrelation(preTrialMeasures, quote(totSales),
trial_store)
corr_nCustomers <- calculateCorrelation(preTrialMeasures, quote(nCustomers),trial_store )
magnitude_nSales <- calculateMagnitudeDistance(preTrialMeasures, quote(totSales),
trial_store)
magnitude_nCustomers <- calculateMagnitudeDistance(preTrialMeasures,
quote(nCustomers), trial_store)
corr_weight <- 0.5
score_nSales <- merge(corr_nSales, magnitude_nSales, by = intersect(names(corr_nSales),names(magnitude_nSales)))[, scoreNSales := corr_weight*corr_nSales$corr_measure + (1-corr_weight)* magnitude_nSales$mag_measure]
score_nCustomers <- merge(corr_nCustomers, magnitude_nCustomers, by = intersect(names(corr_nCustomers),names(magnitude_nCustomers)))[, scoreNCust := corr_weight*corr_measure + (1-corr_weight)*mag_measure]
score_Control <- merge(score_nSales,score_nCustomers , by = c("Store1", "Store2"))
score_Control[, finalControlScore := scoreNSales * 0.5 + scoreNCust * 0.5]
score_Control = score_Control[order(-finalControlScore)]
control_store = score_Control[2,]$Store2
measureOverTimeSales = measure_over_time
measureOverTimeSales$YEARMONTH = as.numeric(measureOverTimeSales$YEARMONTH)
pastSales <- measureOverTimeSales[, Store_type := ifelse(STORE_NBR == trial_store,
"Trial",
ifelse(STORE_NBR == control_store,
"Control", "Other stores"))
][, totSales := mean(totSales), by = c("YEARMONTH",
"Store_type")
][, TransactionMonth := as.Date(paste(YEARMONTH %/% 100, YEARMONTH %% 100, 1, sep = "-"))
][YEARMONTH < 201903 , ]
ggplot(pastSales, aes(TransactionMonth, totSales, color = Store_type)) +
geom_line() +
labs(x = "Month of operation", y = "Total sales", title = "Total sales by month")
pastCustomers <- measureOverTimeSales[, Store_type := ifelse(STORE_NBR == trial_store,
"Trial",
ifelse(STORE_NBR == control_store,
"Control", "Other stores"))
][, nCustomers := mean(nCustomers), by = c("YEARMONTH",
"Store_type")
][, TransactionMonth := as.Date(paste(YEARMONTH %/% 100, YEARMONTH %% 100, 1, sep = "-"))
][YEARMONTH < 201903 , ]
ggplot(pastCustomers, aes(TransactionMonth, nCustomers, color = Store_type)) +
geom_line() +
labs(x = "Month of operation", y = "Total sales", title = "Total sales by month")
scalingFactorForControlSales <- preTrialMeasures[STORE_NBR == trial_store &
YEARMONTH < 201902, sum(totSales)]/preTrialMeasures[STORE_NBR == control_store &
YEARMONTH < 201902, sum(totSales)]
scaledControlSales <- measureOverTimeSales[STORE_NBR == control_store, ][ ,
controlSales := totSales * scalingFactorForControlSales]
percentageDiff <- merge(scaledControlSales,pastSales[Store_type == "Trial"], by = "YEARMONTH")[,percentageDiff := abs(controlSales - totSales.y)/controlSales ]
stdDev <- sd(percentageDiff[YEARMONTH < 201902 , percentageDiff])
degreesOfFreedom <- 7
percentageDiff[, tValue := abs(totSales.x - mean(totSales.y))/stdDev
][, TransactionMonth := TransactionMonth.x
]
pastSales <- pastSales[Store_type %in% c("Trial", "Control"), ]
pastSales_Controls95 <- pastSales[Store_type == "Control",
][, totSales := totSales * (1 + stdDev * 2)
][, Store_type := "Control 95th % confidence
interval"]
#### Control store 5th percentile
pastSales_Controls5 <- pastSales[Store_type == "Control",
][, totSales := totSales * (1 - stdDev * 2)
][, Store_type := "Control 5th % confidence
interval"]
trialAssessment <- rbind(pastSales, pastSales_Controls95, pastSales_Controls5)
#### Plotting these in one nice graph
ggplot(trialAssessment, aes(TransactionMonth, totSales, color = Store_type)) +
geom_rect(data = trialAssessment[ YEARMONTH < 201905 & YEARMONTH > 201901 ,],
aes(xmin = min(TransactionMonth), xmax = max(TransactionMonth), ymin = 0 , ymax =
Inf, color = NULL), show.legend = FALSE) +
geom_line() +
labs(x = "Month of operation", y = "Total sales", title = "Total sales by month")
scalingFactorForControlCust <- preTrialMeasures[STORE_NBR == trial_store & YEARMONTH < 201902, sum(nCustomers)]/preTrialMeasures[STORE_NBR == control_store & YEARMONTH < 201902, sum(nCustomers)]
measureOverTimeCusts <- measureOverTimeSales
scaledControlCustomers <- measureOverTimeCusts[STORE_NBR == control_store, ][ , controlCustomer := nCustomers * scalingFactorForControlCust]
percentageDiff <- merge(scaledControlCustomers,pastCustomers[Store_type == "Trial"],
by = "YEARMONTH")[,percentageDiff := abs(controlCustomer - nCustomers.y)/controlCustomer ]
stdDev <- sd(percentageDiff[YEARMONTH < 201902 , percentageDiff]
)
degreesOfFreedom <- 7
#### Trial and control store number of customers
pastCustomers <- measureOverTimeCusts[, nCusts := mean(nCustomers), by =
c("YEARMONTH", "Store_type")
][Store_type %in% c("Trial", "Control"), ]
pastCustomers_Controls95 <- pastCustomers[Store_type == "Control",
][, nCusts := nCusts * (1 + stdDev * 2)
][, Store_type := "Control 95th % confidence"]
#### Control store 5th percentile
pastCustomers_Controls5 <- pastCustomers[Store_type == "Control",
][, nCusts := nCusts * (1 - stdDev * 2)
][, Store_type := "Control 5th % confidence
interval"]
trialAssessment <- rbind(pastCustomers, pastCustomers_Controls95,
pastCustomers_Controls5)
ggplot(trialAssessment, aes(TransactionMonth, nCusts, color = Store_type)) +
geom_rect(data = trialAssessment[ YEARMONTH < 201905 & YEARMONTH > 201901 ,],
aes(xmin = min(TransactionMonth), xmax = max(TransactionMonth), ymin = 0 , ymax =
Inf, color = NULL), show.legend = FALSE) +
geom_line() +
labs(x = "Month of operation", y = "NUmber of Customers", title = "NUmber of Customers by month")
